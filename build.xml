<?xml version="1.0"?>
<project name="cvaldex-scrobbler" default="compile">
	<!--
	En caso que ant no encuentre el compilador, ejecutar: export JAVA_HOME=/usr/lib/jvm/java-6-openjdk-amd64/
	Si no es la ruta correcta al JDK, ejecutar "locate javac" y copiar la ruta correcta
	-->

	<property file="build.properties"/>

	<!-- Propiedades proyecto generico -->
	<property name="src" location="src"/>
	<property name="classes" location="classes"/>
	<property name="lib" location="lib"/>
	<property name="lastfm-lib-path" location="/last.fm-bindings-7.3/last.fm-bindings.jar"/>

	<!-- Propiedades librería -->
	<property name="lib.src" location="${lib}/last.fm-bindings-7.3/src"/>
	<property name="lib.classes" location="${lib}/last.fm-bindings-7.3/classes"/>
	<property name="lib.jar.name" location="last.fm-bindings.jar"/>

	<target name="all" depends="compile, ipodDB" description="compila y ejecuta el proyecto">
	</target>

	<target name="compile" depends="clean" description="compila el proyecto">
		<mkdir dir="${classes}"/>
		<javac
			srcdir="${src}"
			destdir="${classes}"
			debug="true"
			>

			<classpath>
				<pathelement location="${lib}/${lastfm-lib-path}"/>
				<pathelement path="${lib}/log4j-api-2.7.jar"/>
				<pathelement path="${lib}/log4j-core-2.7.jar"/>
				<pathelement path="${lib}/google-api-client-1.23.0.jar"/>
				<pathelement path="${lib}/google-api-services-sheets-v4-rev487-1.23.0.jar"/>
				<pathelement path="${lib}/google-http-client-1.23.0.jar"/>
				<pathelement path="${lib}/google-http-client-jackson2-1.23.0.jar"/>
				<pathelement path="${lib}/google-oauth-client-1.23.0.jar"/>
				<pathelement path="${lib}/google-oauth-client-java6-1.23.0.jar"/>
				<pathelement path="${lib}/google-oauth-client-jetty-1.23.0.jar"/>
				<pathelement path="${lib}/httpclient-4.0.1.jar"/>
				<pathelement path="${lib}/httpcore-4.0.1.jar"/>
				<pathelement path="${lib}/jackson-core-2.1.3.jar"/>
				<pathelement path="${lib}/javax.servlet-api-3.1.0.jar"/>
				<pathelement path="${lib}/jetty-6.1.26.jar"/>
				<pathelement path="${lib}/jetty-util-6.1.26.jar"/>
			</classpath>
		</javac>
		<copy file="${src}/log4j2.properties" tofile="${classes}/log4j2.properties"/>
	</target>

	<target name="ipodDB" description="ejecutar el proyecto" >
		<java fork="true"
			classname="MainIpod">
			<!--sysproperty key="log4j.configuration" value="file:${classes}/log4j.properties"/-->

			<arg value="${filePathItunes}"/>		<!-- Archivo donde está el listado de tracks a cargar -->
			<arg value="${lastfm.username}"/>	<!-- Usuario last.fm -->
			<arg value="${lastfm.password}"/>	<!-- Password last.fm -->
			<arg value="${sendScrobbles}"/>		<!-- true si se deben enviar los scrobbligs o false si solo se quiere revisar la BD-->
			<arg value="${waitTime}"/>			<!-- Cantidad de milisegundos a esperar despues de cada peticion -->
			<arg value="${numberOfScrobblesBeforeLog}"/>	<!-- Cada cuantos envíos escribir log -->
			<arg value="${numberOfScrobblesWithoutSend}"/>	<!-- Cuantos tracks saltarse antes de comenzar a enviar data -->

			<arg value="${sendRandomScrobles}"/> 			<!-- ¿Enviar los tracks al azar? -->
			<arg value="${numberOfRandomScrobles}"/> 		<!-- ¿Cuantos tracks debo enviar al azar?-->

			<arg value="${useProxy}"/>			<!-- Indica si se debe usar proxy para la salida -->
			<arg value="${proxy.host}"/>		<!-- Host del proxy -->
			<arg value="${proxy.port}"/>		<!-- Puerto del proxy -->

			<classpath>
				<pathelement path="${lib}/log4j-api-2.7.jar"/>
				<pathelement path="${lib}/log4j-core-2.7.jar"/>
				<pathelement location="${lib}/${lastfm-lib-path}"/>
				<pathelement path="${classes}"/>
			</classpath>
		</java>
	</target>

	<target name="csv" description="ejecutar el proyecto" >
			<java fork="true"
				classname="MainCSVFile">
				<arg value="${filePathCSV}"/>		<!-- Archivo donde está el listado de tracks a cargar -->
				<arg value="${lastfm.username}"/>	<!-- Usuario last.fm -->
				<arg value="${lastfm.password}"/>	<!-- Password last.fm -->
				<arg value="${sendScrobbles}"/>		<!-- true si se deben enviar los scrobbligs o false si solo se quiere revisar la BD-->
				<arg value="${waitTime}"/>			<!-- Cantidad de milisegundos a esperar despues de cada peticion -->
				<arg value="${numberOfScrobblesBeforeLog}"/>	<!-- Cada cuantos envíos escribir log -->
				<arg value="${numberOfScrobblesWithoutSend}"/>	<!-- Cuantos tracks saltarse antes de comenzar a enviar data -->

				<arg value="${useProxy}"/>			<!-- Indica si se debe usar proxy para la salida -->
				<arg value="${proxy.host}"/>		<!-- Host del proxy -->
				<arg value="${proxy.port}"/>		<!-- Puerto del proxy -->


				<classpath>
					<pathelement path="${lib}/log4j-api-2.7.jar"/>
					<pathelement path="${lib}/log4j-core-2.7.jar"/>
					<pathelement location="${lib}/${lastfm-lib-path}"/>
					<pathelement path="${classes}"/>

				</classpath>
			</java>

		</target>
	
	<target name="gss" description="ejecutar el proyecto" >
				<java fork="true"
					classname="MainGoogleSpreadSheet">
					<arg value="${spreadSheet.id}"/>		<!-- ID Hoja de Calculo -->
					<arg value="${lastfm.username}"/>	<!-- Usuario last.fm -->
					<arg value="${lastfm.password}"/>	<!-- Password last.fm -->
					<arg value="${sendScrobbles}"/>		<!-- true si se deben enviar los scrobbligs o false si solo se quiere revisar la BD-->
					<arg value="${waitTime}"/>			<!-- Cantidad de milisegundos a esperar despues de cada peticion -->
					<arg value="${numberOfScrobblesBeforeLog}"/>	<!-- Cada cuantos envíos escribir log -->
					<arg value="${numberOfScrobblesWithoutSend}"/>	<!-- Cuantos tracks saltarse antes de comenzar a enviar data -->

					<arg value="${useProxy}"/>			<!-- Indica si se debe usar proxy para la salida -->
					<arg value="${proxy.host}"/>		<!-- Host del proxy -->
					<arg value="${proxy.port}"/>		<!-- Puerto del proxy -->
					
					<arg value="${spreadSheet.secretsFilePath}"/>		<!-- Puerto del proxy -->
					<arg value="${spreadSheet.range}"/>		<!-- Puerto del proxy -->
					
					
					<classpath>
						<pathelement path="${lib}/log4j-api-2.7.jar"/>
						<pathelement path="${lib}/log4j-core-2.7.jar"/>
						<pathelement path="${lib}/google-api-client-1.23.0.jar"/>
						<pathelement path="${lib}/google-api-services-sheets-v4-rev487-1.23.0.jar"/>
						<pathelement path="${lib}/google-http-client-1.23.0.jar"/>
						<pathelement path="${lib}/google-http-client-jackson2-1.23.0.jar"/>
						<pathelement path="${lib}/google-oauth-client-1.23.0.jar"/>
						<pathelement path="${lib}/google-oauth-client-java6-1.23.0.jar"/>
						<pathelement path="${lib}/google-oauth-client-jetty-1.23.0.jar"/>
						<pathelement path="${lib}/httpclient-4.0.1.jar"/>
						<pathelement path="${lib}/httpcore-4.0.1.jar"/>
						<pathelement path="${lib}/jackson-core-2.1.3.jar"/>
						<pathelement path="${lib}/javax.servlet-api-3.1.0.jar"/>
						<pathelement path="${lib}/jetty-6.1.26.jar"/>
						<pathelement path="${lib}/jetty-util-6.1.26.jar"/>
						<pathelement location="${lib}/${lastfm-lib-path}"/>
						<pathelement path="${classes}"/>

					</classpath>
				</java>

			</target>


	<target name="clean" description="elimina el directorio de compilacion" >
    	<delete dir="${classes}"/>
  	</target>
</project>
